playertable

PLAYER_ID
name	NAME
lv	LV
基礎hp	KISO_HP
基礎at	KISO_AT
基礎def	KISO_DEF
exp	EXP
装備hp	SOUBI_HP
装備at	SOUBI_AT
装備def	SOUBI_DEF

enemytable

ENEMY_ID
NAME
HP
AT
DEF
EXP

itemtable

ITEM_ID
NAME
HP
AT
DEF

10/28 DBの作成前に思考をメモ

・レベルやexpの扱いをどう実装するか→レベルが上がれば全ステータス×1.1倍などで実装？
・アイテムのドロップ率をDBかUnityどっちで実装するのが動かしやすいか→今回はUnityで
・アイテムのドロップ率に差をつけるには→プレハブに敵ステータスを入れる予定でそこに実装できそう？
・装備のステータス反映はUnity側でなんとなくできそう→update文でplayertableを変える
・敵のテーブルをダンジョンごとに分けるかどうか→どっちでも行けそうだけど今回は全部一緒で実装予定
・敵の出現率に差をつけるにはどうするか→時間なさそうなので見送り→乱数でいける？

10/31
・タイトルで名前を入力→DBにデータがあれば持ってくる、データがなければ新規作成　名前が空白だとボタンが出ないようにする
・ステータスのバランスなどはあまり考えずに動かすことを目標にする

ダメージ計算式
ダメージ = （攻撃力 ÷ 2） - （防御力 ÷ 4）
ダメージ = （攻撃力 ×0.5） - （防御力 ×0.25）

11/1
病院に薬をもらっていたので作業時間少な目

・DB　装備や敵のデータは似たものを作るので後回し
・DB仮作成できたので、とりあえずタイトルのスクリプトを作成していく
・セーブデータをDBに保存できるようにしたいが、今の方法だと装備の名前を保存するのができない？（装備のステータスは保存できる）→作りながら考えるわからんかったら妥協
・タイトルで名前を入力して、DBに一致する名前があればデータを取り出す、なければ新規にデータを挿入したい→exists構文でいける？

11/2

・前回の悩みの解決方法→返り値があれば、データをロードする。返り値がなかったら新しいボタンを出して、それで新規データを挿入する

$sql = 'SELECT EXISTS (SELECT * FROM playertable WHERE NAME = "'.$NAME.'" LIMIT 1)';


11/4 

・db ドキュメントルート配下じゃない

return文を使う
if{return;}
・変数　シーンをまたぐ
・　public変数

